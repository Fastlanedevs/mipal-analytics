name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 669190811117.dkr.ecr.eu-north-1.amazonaws.com/bpa-copilot-backend
  ECS_CLUSTER: mipal-dev
  ECS_SERVICE: mipal-api-dev
  CONTAINER_NAME: mipal-api-dev

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev
    env:
      IMAGE_TAG: ${{ github.run_number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build \
            --cache-from $ECR_REGISTRY:latest \
            -t $ECR_REGISTRY:${IMAGE_TAG} \
            -t $ECR_REGISTRY:latest \
            -f docker/Dockerfile \
            .
          docker push $ECR_REGISTRY:${IMAGE_TAG}
          docker push $ECR_REGISTRY:latest

      - name: Force new deployment of existing task definition
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment

      - name: Wait for service to stabilize
        run: |
          aws ecs wait services-stable \
            --cluster ${{ env.ECS_CLUSTER }} \
            --services ${{ env.ECS_SERVICE }}